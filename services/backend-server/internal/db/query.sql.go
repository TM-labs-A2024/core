// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.26.0
// source: query.sql

package db

import (
	"context"

	"github.com/jackc/pgx/v5/pgtype"
)

const getDoctorByUUID = `-- name: GetDoctorByUUID :one
SELECT institution_uuid,
    firstname,
    lastname,
    gov_id,
    birthdate,
    email,
    phone_number,
    credentials
FROM Doctor
WHERE uuid = $1
`

type GetDoctorByUUIDRow struct {
	InstitutionUuid pgtype.UUID `json:"institutionUuid"`
	Firstname       string      `json:"firstname"`
	Lastname        string      `json:"lastname"`
	GovID           string      `json:"govId"`
	Birthdate       pgtype.Date `json:"birthdate"`
	Email           string      `json:"email"`
	PhoneNumber     string      `json:"phoneNumber"`
	Credentials     string      `json:"credentials"`
}

func (q *Queries) GetDoctorByUUID(ctx context.Context, uuid pgtype.UUID) (GetDoctorByUUIDRow, error) {
	row := q.db.QueryRow(ctx, getDoctorByUUID, uuid)
	var i GetDoctorByUUIDRow
	err := row.Scan(
		&i.InstitutionUuid,
		&i.Firstname,
		&i.Lastname,
		&i.GovID,
		&i.Birthdate,
		&i.Email,
		&i.PhoneNumber,
		&i.Credentials,
	)
	return i, err
}
